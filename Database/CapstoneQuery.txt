CREATE TABLE Users (
    UserID INT PRIMARY KEY IDENTITY,
    FirstName NVARCHAR(50),
    LastName NVARCHAR(50),
    Email NVARCHAR(255) UNIQUE,
    EmailVerified BIT DEFAULT 0,
    PasswordHash NVARCHAR(256),
    Administrator BIT DEFAULT 0,
	EmailConfirmToken NVARCHAR(MAX) NULL,
	RegistrationDate DATETIME
);


CREATE TABLE CardTypes (
    TypeID INT PRIMARY KEY IDENTITY,
    Name NVARCHAR(50)
);

CREATE TABLE Expansions (
    ExpansionID INT PRIMARY KEY IDENTITY,
    Name NVARCHAR(100),
    ReleaseDate DATE,
    ImageURL NVARCHAR(MAX),
    TypeID INT,
    FOREIGN KEY (TypeID) REFERENCES CardTypes(TypeID)
);

CREATE TABLE Rarities (
    RarityID INT PRIMARY KEY IDENTITY,
    Description NVARCHAR(50),
    TypeID INT,
    FOREIGN KEY (TypeID) REFERENCES CardTypes(TypeID)
);


CREATE TABLE Products (
    ProductID INT PRIMARY KEY IDENTITY,
    Name NVARCHAR(100),
    Price DECIMAL(7, 2),
    AvailableQuantity INT,
    ImageURL NVARCHAR(MAX),
    SerialNumber NVARCHAR(50) UNIQUE,
    FirstEdition BIT,
    RarityID INT,
    ExpansionID INT,
    TypeID INT,
    Language NVARCHAR(50),
    Condition NVARCHAR(50),
    FOREIGN KEY (RarityID) REFERENCES Rarities(RarityID),
    FOREIGN KEY (ExpansionID) REFERENCES Expansions(ExpansionID),
    FOREIGN KEY (TypeID) REFERENCES CardTypes(TypeID)
);



CREATE TABLE Categories (
    CategoryID INT PRIMARY KEY IDENTITY,
    Name NVARCHAR(50),
    TypeID INT,
    FOREIGN KEY (TypeID) REFERENCES CardTypes(TypeID)
);

CREATE TABLE ProductCategories (
    ProductID INT,
    CategoryID INT,
    PRIMARY KEY (ProductID, CategoryID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID)
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY IDENTITY,
    UserID INT,
    OrderDate DATETIME,
    RecipientFirstName NVARCHAR(50),
    RecipientLastName NVARCHAR(50),
    Address NVARCHAR(MAX),
    BuildingNumber NVARCHAR(10),
    ApartmentFloorInterior NVARCHAR(MAX),
    ZIPCode NVARCHAR(5),
    City NVARCHAR(50),
    Province NVARCHAR(2),
    Phone NVARCHAR(20),
    Total DECIMAL(7, 2),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY IDENTITY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    Price DECIMAL(7, 2),
    DiscountApplied DECIMAL(7, 2),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

CREATE TABLE Reviews (
    ReviewID INT PRIMARY KEY IDENTITY,
    OrderID INT,
    UserID INT,
    Rating INT,
    Text NVARCHAR(MAX),
    ReviewDate DATETIME,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Shipments (
    ShipmentID INT PRIMARY KEY IDENTITY,
    OrderID INT,
    ShippingMethod NVARCHAR(255),
    ShippingCost DECIMAL(7, 2),
    Status NVARCHAR(255),
    TrackingNumber NVARCHAR(255) NULL,
    DepartureDate DATETIME NULL,
    EstimatedDeliveryDate DATETIME NULL,
    ActualDeliveryDate DATETIME NULL,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
);

CREATE TABLE Coupons (
    CouponID INT PRIMARY KEY IDENTITY,
    Code NVARCHAR(50) UNIQUE,
    Description NVARCHAR(MAX),
    Value DECIMAL(7, 2),
    StartDate DATETIME,
    EndDate DATETIME,
    RemainingUses INT
);

CREATE TABLE Wishlists (
    WishlistID INT PRIMARY KEY IDENTITY,
    UserID INT,
    ProductID INT,
    DateAdded DATETIME,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);